function checkMessageFocusAndAddButton() {
    const messageElements = document.getElementsByClassName("msg-form__contenteditable");
    if (messageElements.length > 0) {
        const messageElement = messageElements[0];
        if (messageElement.getAttribute('data-artdeco-is-focused') === 'true') {
            console.log("Message input is focused");
            
            // Check if the button already exists
            if (!document.getElementById('magicButton')) {
                // Create the button
                const button = document.createElement('button');
                button.id = 'magicButton';
                button.style.position = 'absolute';
                button.style.right = '10px';
                button.style.top = '50%';
                button.style.transform = 'translateY(-50%)';
                button.style.border = 'none';
                button.style.background = 'none';
                button.style.cursor = 'pointer';
                button.style.zIndex = '1000';

                // Create the image
                const img = document.createElement('img');
                img.src = 'https://example.com/path-to-your-magic-tool-icon.png'; // Replace with your actual image URL
                img.style.width = '20px';
                img.style.height = '20px';

                // Add the image to the button
                button.appendChild(img);

                // Add click event listener to the button
                button.addEventListener('click', createModal);

                // Add the button to the message element's parent
                messageElement.parentElement.style.position = 'relative';
                messageElement.parentElement.appendChild(button);
            }
        } else {
            console.log("Message input is not focused");
            // Remove the button if it exists
            const existingButton = document.getElementById('magicButton');
            if (existingButton) {
                existingButton.remove();
            }
        }
    } else {
        console.log("Message input element not found");
    }
}

function createModal() {
    // Create overlay
    const overlay = document.createElement('div');
    overlay.style.position = 'fixed';
    overlay.style.top = '0';
    overlay.style.left = '0';
    overlay.style.width = '100%';
    overlay.style.height = '100%';
    overlay.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';
    overlay.style.zIndex = '1001';

    // Create modal
    const modal = document.createElement('div');
    modal.style.position = 'fixed';
    modal.style.top = '50%';
    modal.style.left = '50%';
    modal.style.transform = 'translate(-50%, -50%)';
    modal.style.padding = '14px';
    modal.style.borderRadius = '15px';
    modal.style.zIndex = '1002';
    modal.style.width = '500px';
    modal.style.backgroundColor = '#F9FAFB';
    modal.style.boxShadow = '0 2px 4px 0 rgba(0, 0, 0, 0.06)';
    modal.style.maxHeight = '80vh';
    modal.style.overflowY = 'auto';

    // Create chat container
    const chatContainer = document.createElement('div');
    chatContainer.style.display = 'flex';
    chatContainer.style.flexDirection = 'column';
    chatContainer.style.gap = '10px';
    chatContainer.style.marginBottom = '20px';

    // Create input field
    const input = document.createElement('input');
    input.type = 'text';
    input.placeholder = 'Your prompt';
    input.style.marginBottom = '10px';
    input.style.width = '100%';
    input.style.padding = '4px 4px 4px 10px';
    input.style.backgroundColor = 'white';
    input.style.fontFamily = 'Inter, sans-serif';
    input.style.border = '1px solid gray';
    input.style.color = 'gray';
    input.style.textAlign = 'left';
    input.style.boxSizing = 'border-box';
    input.style.outline = 'none';

    // Create button container
    const buttonContainer = document.createElement('div');
    buttonContainer.style.display = 'flex';
    buttonContainer.style.justifyContent = 'flex-end';
    buttonContainer.style.gap = '10px';

    // Create insert button
    const insertButton = document.createElement('button');
    insertButton.style.display = 'none'; // Hide initially
    insertButton.style.alignItems = 'center';
    insertButton.style.padding = '4px 10px';
    insertButton.style.cursor = 'pointer';
    insertButton.style.backgroundColor = 'white';
    insertButton.style.color = '#666d80';
    insertButton.style.border = '1px solid #666d80';
    insertButton.style.borderRadius = '4px';

    // Add image to the insert button
    const insertButtonImage = document.createElement('img');
    insertButtonImage.src = 'path/to/insert-image.png'; // Replace with the actual path to your image
    insertButtonImage.alt = 'Icon';
    insertButtonImage.width = 20;
    insertButtonImage.height = 20;
    insertButtonImage.style.marginRight = '5px';

    // Add text to the insert button
    const insertButtonText = document.createElement('span');
    insertButtonText.textContent = 'Insert';

    // Append image and text to insert button
    insertButton.appendChild(insertButtonImage);
    insertButton.appendChild(insertButtonText);

    // Create generate/regenerate button
    const generateButton = document.createElement('button');
    generateButton.style.display = 'flex';
    generateButton.style.alignItems = 'center';
    generateButton.style.padding = '4px 10px';
    generateButton.style.cursor = 'pointer';
    generateButton.style.backgroundColor = 'rgb(59, 130, 246)';
    generateButton.style.color = 'white';
    generateButton.style.border = 'none';
    generateButton.style.borderRadius = '4px';

    // Add image to the generate button
    const generateButtonImage = document.createElement('img');
    generateButtonImage.src = 'path/to/generate-image.png'; // Replace with the actual path to your image
    generateButtonImage.alt = 'Icon';
    generateButtonImage.width = 20;
    generateButtonImage.height = 20;
    generateButtonImage.style.marginRight = '5px';

    // Add text to the generate button
    const generateButtonText = document.createElement('span');
    generateButtonText.textContent = 'Generate';

    // Append image and text to generate button
    generateButton.appendChild(generateButtonImage);
    generateButton.appendChild(generateButtonText);

    // Append buttons to button container
    buttonContainer.appendChild(insertButton);
    buttonContainer.appendChild(generateButton);

    // Append input, button container, and chat container to modal
    modal.appendChild(chatContainer);
    modal.appendChild(input);
    modal.appendChild(buttonContainer);

    // Add modal to overlay
    overlay.appendChild(modal);

    // Add overlay to body
    document.body.appendChild(overlay);

    // Close modal when clicking outside
    overlay.addEventListener('click', (e) => {
        if (e.target === overlay) {
            document.body.removeChild(overlay);
        }
    });

    // Handle generate/regenerate button click
    generateButton.addEventListener('click', () => {
        const userInput = input.value.trim();
        if (userInput) {
            const reply = generateRandomReply();

            // Create user message
            const userMessage = document.createElement('div');
            userMessage.style.alignSelf = 'flex-end';
            userMessage.style.padding = '10px';
            userMessage.style.backgroundColor = '#e0e0e0';
            userMessage.style.borderRadius = '10px';
            userMessage.style.maxWidth = '70%';
            userMessage.style.wordWrap = 'break-word';
            userMessage.textContent = userInput;

            // Create reply message
            const replyMessage = document.createElement('div');
            replyMessage.style.alignSelf = 'flex-start';
            replyMessage.style.padding = '10px';
            replyMessage.style.backgroundColor = '#d1e7fd';
            replyMessage.style.borderRadius = '10px';
            replyMessage.style.maxWidth = '70%';
            replyMessage.style.wordWrap = 'break-word';
            replyMessage.textContent = reply;

            // Append messages to chat container
            chatContainer.appendChild(userMessage);
            chatContainer.appendChild(replyMessage);

            // Clear the input field
            input.value = '';

            // Show the insert button and change generate button to regenerate
            insertButton.style.display = 'flex';
            generateButtonText.textContent = 'Regenerate';
            generateButtonImage.src = 'path/to/regenerate-image.png'; // Replace with the actual path to your image

            // Add event listener for insert button
            insertButton.addEventListener('click', () => {
                const chatBox = document.querySelector('.msg-form__contenteditable p');
                chatBox.textContent = reply;

                // Trigger the necessary events to simulate a real user input
                chatBox.dispatchEvent(new Event('input', { bubbles: true }));
                chatBox.dispatchEvent(new Event('change', { bubbles: true }));

                // Find and click the send button
                const sendButton = document.querySelector('.msg-form__send-button'); // Adjust the selector to target the actual send button
                if (sendButton) {
                    sendButton.click();
                }

                // Close the modal and restore initial state
                document.body.removeChild(overlay);
                insertButton.style.display = 'none';
                generateButtonText.textContent = 'Generate';
                generateButtonImage.src = 'path/to/generate-image.png'; // Replace with the actual path to your image
            });
        }
    });
}

// Function to generate a random reply from a predefined list
function generateRandomReply() {
    const replies = [
        "Thanks for this opportunity. If you have any doubts, don't hesitate to contact me.",
        "I appreciate your time and consideration. Please let me know if you need any further information.",
        "Thank you for reaching out. I'm here to help with any questions you may have.",
        "It's a pleasure to connect with you. Feel free to ask if you need any clarification.",
        "Thank you for your message. I'm available for any questions or additional information."
    ];
    const randomIndex = Math.floor(Math.random() * replies.length);
    return replies[randomIndex];
}

// Call the function to create the modal
createModal();



// Run the function every 3 seconds
setInterval(checkMessageFocusAndAddButton, 3000);